title = "Карта"
url = "/map"
layout = "octaskin"
is_hidden = 0
==
<?php
function onStart()
{
    $this['geoJson'] = file_get_contents(config('app.geojson.prepared_file'));
}
?>
==
<link rel="stylesheet" href="{{ url('assets/vendor/leaflet-1.0.3/leaflet.css') }}" />
<script src="{{ url('assets/vendor/leaflet-1.0.3/leaflet.js') }}"></script>
<style>
    .leaflet-verticalcenter {
        position: absolute;
        top: 50%;
    }
    nav ul a {
        color: #686868; !important
    }
    .white-text {
        color: #686868 !important;
    }
    .leaflet-popup-content>ul>li {
        margin-bottom: 1em;
    }
</style>

<div>
  <div id="map" class="lt-slider slider fullscreen"></div>
  <div class="map-sidebar map-sidebar-js">
    <i class="material-icons right button close-js">close</i>
    <input type="text" class="search-string-js" placeholder="Поиск"><br>
  </div>
</div>

<script>
    var tiliktinoLatLon = [56.0858, 36.612];
    var zoom = 17;
    var map = L.map('map').setView(tiliktinoLatLon, zoom);
    var osmTilesUrl = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';

    L.tileLayer(osmTilesUrl, {
        maxZoom: 19,
        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a>',
    }).addTo(map);

    var getJsonData = {{ geoJson|raw }};

    // Рисуем на карте полученные полигоны
    L.geoJson(getJsonData, {
        // Стиль полигонов
        style: function(feature) {
            return {
                color: feature.properties.hasContacts ? 'green' : 'black',
                weight: 1
            };
        },
        // Навешиваеми свой попап на каждый полигон
        onEachFeature: function (feature, layer) {
            layer.bindPopup(feature.properties.data, {
                minWidth: 300
            });
        },
        filter: function (feature, layer) {
            return feature.properties.data !== undefined;
        }
    }).addTo(map);


    // Move controls to other place
    function addControlPlaceholders(map) {
        var corners = map._controlCorners,
            l = 'leaflet-',
            container = map._controlContainer;

        function createCorner(vSide, hSide) {
            var className = l + vSide + ' ' + l + hSide;
            corners[vSide + hSide] = L.DomUtil.create('div', className, container);
        }

        createCorner('verticalcenter', 'left');
        createCorner('verticalcenter', 'right');
    }
    addControlPlaceholders(map);

    // Change the position of the Zoom Control to a newly created placeholder.
    map.zoomControl.setPosition('verticalcenterright');

    var searchLayer;
    document.addEventListener("DOMContentLoaded", function() {
        $('.close-js').on('click', function(e) {
            $(e.target).parents('.map-sidebar-js').hide();
        });
        $('.search-string-js').on('input', function(e) {
            console.log(1);
            var search = $('.search-string-js').val().toLowerCase();

            if (searchLayer) {
                map.removeLayer(searchLayer);
            }
            searchLayer = L.geoJson(getJsonData, {
                style: {
                    color: 'red',
                    weight: 1
                },
                // Навешиваеми свой попап на каждый полигон
                onEachFeature: function (feature, layer) {
                    layer.bindPopup(feature.properties.data, {
                        minWidth: 300
                    });
                },
                filter: function (feature, layer) {
                    var isStead = false;
                    if (feature.properties.stead) {
                        var steads = feature.properties.stead.split(',');
                        for (var key in steads) {
                            if (steads[key].replace(/\s/g, '') === search) {
                                isStead = true;
                                break;
                            }
                        }
                    }
                    return search && feature.properties.stead && (
                        (feature.properties.name && feature.properties.name.toLowerCase().indexOf(search) >= 0)
                        || (search.length > 5 && feature.properties.phone && feature.properties.phone.toLowerCase().indexOf(search) >= 0)
                        || (search.length > 5 && feature.properties.email && feature.properties.email.toLowerCase().indexOf(search) >= 0)
                        || isStead
                    );
                }
            });
            searchLayer.addTo(map);
        });
    });

</script>